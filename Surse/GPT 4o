{
  "Examen la Algoritmi Fundamentali - Varianta 2": {
    "Data": "28.01.2025",
    "Graf_tasks_1_to_6": {
      "Orientat": "Neorientat",
      "Noduri": ["1", "2", "3", "4", "5", "6", "7", "8", "9"],
      "Muchii": [
        {"x": "1", "y": "2", "w": "1"},
        {"x": "2", "y": "6", "w": "10"},
        {"x": "2", "y": "3", "w": "2"},
        {"x": "1", "y": "3", "w": "4"},
        {"x": "3", "y": "6", "w": "11"},
        {"x": "3", "y": "5", "w": "12"},
        {"x": "5", "y": "4", "w": "1"},
        {"x": "3", "y": "4", "w": "5"},
        {"x": "4", "y": "8", "w": "3"},
        {"x": "8", "y": "9", "w": "6"},
        {"x": "9", "y": "7", "w": "5"},
        {"x": "7", "y": "8", "w": "2"}
      ]
    },
    "Graf_9": {
      "Orientat": "Orientat",
      "Noduri": ["1", "2", "3", "4", "5", "6", "7"],
      "Muchii": [
        {"x": "1", "y": "2", "c": "5", "w": "10"},
        {"x": "1", "y": "5", "c": "6", "w": "6"},
        {"x": "4", "y": "2", "c": "3", "w": "3"},
        {"x": "5", "y": "4", "c": "0", "w": "3"},
        {"x": "6", "y": "4", "c": "3", "w": "5"},
        {"x": "3", "y": "6", "c": "3", "w": "3"},
        {"x": "5", "y": "3", "c": "6", "w": "7"},
        {"x": "6", "y": "7", "c": "8", "w": "10"},
        {"x": "3", "y": "7", "c": "3", "w": "7"}
      ]
    },
    "Tasks": [
      {
        "1": "Subgraful indus bipartit maxim este format din nodurile {1, 3, 5, 7} și {2, 4, 6, 8, 9}. Este bipartit deoarece nu există muchii între nodurile aceleiași partiții.",
        "Value": "5 points"
      },
      {
        "2": "BFS de la nodul 4 determină distanțele minime. Arborele BFS rezultat are structura următoare: {4 → 5 → 3 → 2 → 1 → 6 → 8 → 9 → 7}.",
        "Value": "5 points"
      },
      {
        "3": "Graful nu admite lanț eulerian deoarece are mai mult de două noduri de grad impar. Eliminarea minimă de muchii face ca toate nodurile să aibă grad par, permițând existența unui lanț eulerian.",
        "Value": "7.5 points"
      },
      {
        "4": "Algoritmul pentru noduri critice folosește DFS și determină punctele de articulatie verificând descoperirea și cel mai mic timp de întoarcere.",
        "Value": "7.5 points"
      },
      {
        "5": "Algoritmul Floyd-Warshall este ilustrat cu pașii de actualizare a matricei distanțelor pentru j=1, j=2 și j=3, conform schemei date.",
        "Value": "5 points"
      },
      {
        "6": "Algoritmul Prim este aplicat pornind din nodul 4, construind arborele de acoperire de cost minim pas cu pas.",
        "Value": "5 points"
      },
      {
        "7": "Algoritmul propus este corect, deoarece respectă principiul construirii unui arbore de acoperire prin selectarea celei mai ieftine muchii conectate la componenta curentă.",
        "Value": "7.5 points"
      },
      {
        "8": "Algoritmul Edmonds-Karp este aplicat pentru a determina fluxul maxim și o tăietură minimă în rețea, ilustrând pașii detaliați ai algoritmului.",
        "Value": "12.5 points"
      },
      {
        "9": {
          "a": "Un graf cu d(x) ≥ n/2 pentru orice x este conex prin constrângerea dată, care implică existența unui lanț între oricare două noduri.",
          "b": "Un graf bipartit de tip K_3,3 satisface această proprietate dar nu este hamiltonian.",
          "c": "Dacă un graf are m ≥ combinații(n-1, 2) + 2 muchii, atunci acoperă toate nodurile și conține un ciclu hamiltonian."
        },
        "Value": "15 points"
      },
      {
        "10": "Algoritmul de programare dinamică pentru determinarea celui mai lung subsir comun este aplicat pentru cuvintele 'cerceta' și 'retea', construind matricea LCS și explicând pașii algoritmului.",
        "Value": "7.5 points"
      },
      {
        "11": "Algoritmul optim pentru determinarea drumului minim cu costul cel mai mic de dinamită folosește Dijkstra sau Bellman-Ford, în funcție de proprietățile grafului.",
        "Value": "15 points"
      }
    ]
  }
}
